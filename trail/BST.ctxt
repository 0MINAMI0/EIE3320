#BlueJ class context
comment0.target=BST
comment1.params=
comment1.target=BST()
comment1.text=Create\ a\ default\ BST\ with\ a\ natural\ order\ comparator
comment10.params=root
comment10.target=void\ postorder(BST.TreeNode)
comment10.text=Postorder\ traversal\ from\ a\ subtree
comment11.params=
comment11.target=void\ preorder()
comment12.params=root
comment12.target=void\ preorder(BST.TreeNode)
comment12.text=Preorder\ traversal\ from\ a\ subtree
comment13.params=
comment13.target=int\ getSize()
comment14.params=
comment14.target=BST.TreeNode\ getRoot()
comment14.text=Returns\ the\ root\ of\ the\ tree
comment15.params=e
comment15.target=java.util.ArrayList\ path(java.lang.Comparable)
comment15.text=Returns\ a\ path\ from\ the\ root\ leading\ to\ the\ specified\ element
comment16.params=e
comment16.target=boolean\ delete(java.lang.Comparable)
comment17.params=
comment17.target=java.util.Iterator\ iterator()
comment18.params=
comment18.target=void\ clear()
comment2.params=c
comment2.target=BST(java.util.Comparator)
comment2.text=Create\ a\ BST\ with\ a\ specified\ comparator
comment3.params=objects
comment3.target=BST(java.lang.Comparable[])
comment3.text=Create\ a\ binary\ tree\ from\ an\ array\ of\ objects
comment4.params=e
comment4.target=boolean\ search(java.lang.Comparable)
comment5.params=e
comment5.target=boolean\ insert(java.lang.Comparable)
comment6.params=e
comment6.target=BST.TreeNode\ createNewNode(java.lang.Comparable)
comment7.params=
comment7.target=void\ inorder()
comment8.params=root
comment8.target=void\ inorder(BST.TreeNode)
comment8.text=Inorder\ traversal\ from\ a\ subtree
comment9.params=
comment9.target=void\ postorder()
numComments=19
